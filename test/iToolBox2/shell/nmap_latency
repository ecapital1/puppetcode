#!/bin/bash
target=$1
log=$2
nmap=/usr/bin/nmap
mail_flag=/tmp/nmap_mail_flag.$target
alert_to=michael.tao@epochcapital.com.au
retry_interval=30
retry=5

# check the input or display the usage
if [ $# -lt 2 ] 
then
	echo "$0 <target_name> <log_file>"
	exit 1
fi


if [ ! -f $nmap ]
then
	echo "nmap softare not installed"
	exit 1
fi

result=`sudo $nmap -sP $target | grep "is up"`
prefix=`date "+%Y-%m-%d %H:%M:%S"`
down_flag=no

if [ -z "$result" ]
then
	#this means that the host could be down or not stable, in this case, continue to contact every 30 seconds for 5 times
	echo "$prefix-> Host $target seems down" >> $log
	let i=0
	while [ $i -lt $retry ]
	do
		sleep $retry_interval
		result=`sudo $nmap -sP $target | grep "is up"`
		prefix=`date "+%Y-%m-%d %H:%M:%S"`
		if [ -z "$result" ]
		then
			echo "$prefix-> Host $target seems down" >> $log
		else
			echo "$prefix-> $target $result" >> $log
			break	
		fi
		let i=$i+1
	done
	# if you are here, then the target is really down, then send out a notification if not sent yet
	if [ ! -f $mail_flag ]
	then
		# send out a mail
		subject="host $target seems down at `date -R`"
		echo $subject | mail -s "$subject" $alert_to
	fi
	touch $mail_flag
	
else
	#this means that the host is up, write the latency to the log.
	echo "$prefix-> $target: $result" >> $log
	if [ -f $mail_flag ]
	then
		subject="host $target is up at `date -R`"
		echo $subject | mail -s "$subject" $alert_to
		rm $mail_flag
	fi
fi

